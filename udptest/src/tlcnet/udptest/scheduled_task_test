System.out.println(new Date().getTime() % 60000);
ScheduledThreadPoolExecutor schedExec = new ScheduledThreadPoolExecutor(CORE_POOL_SIZE);
ScheduledFuture<?> future1 = schedExec.schedule(new RunnableThread(), 3000, TimeUnit.MILLISECONDS);
ScheduledFuture<?> future2 = schedExec.schedule(new RunnableThread(), 500, TimeUnit.MILLISECONDS);

try {
	Thread.sleep(6000);
} catch (InterruptedException e1) {
	// TODO Auto-generated catch block
	e1.printStackTrace();
}

Object res = null;
try {
	res = future1.get();
} catch (InterruptedException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
} catch (ExecutionException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
System.out.println("Value returned by Callable Thread: "+res);
 //returns active thread 
int activeCnt=schedExec.getActiveCount();
System.out.println("activeCnt=" + activeCnt);
//stops all the threads in ScheduledThreadPoolExecutor
schedExec.shutdownNow();
System.out.println(schedExec.isShutdown());